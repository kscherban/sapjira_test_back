{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
  "parameters": {
      "landscape": {
          "type": "string",
          "defaultValue": "test",
          "allowedValues": [
              "test",
              "qa",
              "dev",
              "prod"
          ],
          "metadata": {
            "description": "landscape name or tier name"
          }
      },
      "ip-pool": {
        "type": "array",
        "defaultValue": [
            "10.79.81.41"
        ],
        "allowedValues": [
            "10.79.81.41",
            "10.79.81.42",
            "10.79.81.43",
            "10.79.81.44",
            "10.79.81.45",
            "10.79.81.46",
            "10.79.81.7",
            "10.79.81.13"
        ],
        "metadata": {
          "description": "landscape name or tier name"
        }
    },
      "ifacecount": {
          "type": "int",
          "defaultValue": 1,
          "allowedValues": [
            1,
            2
        ]
      },
      "storagecount": {
        "type": "int",
        "defaultValue": 1,
        "allowedValues": [
          1,
          2
      ]
    },
      "jumpcount": {
        "type": "int",
        "defaultValue": 2,
        "allowedValues": [
          1,
          2,
          3
      ]
    },
    "VmSize": {
        "type": "string",
        "defaultValue": "Standard_A0",
        "allowedValues": [
          "Standard_A0",
          "Standard_A1"
        ]
    },
    "jumpboxSshUser": {
        "type": "string",
        "defaultValue": "jiraadmin"
    },
    "jumpboxSshKey": {
        "type": "string",
        "defaultValue": "ssh-rsa AAAAB3NzaC1yc2EAAAABJQAAAQEA9CgRrAvu0f8YtV71yn1NnvkKdYah0gfprB8k9QXG1P7Yn5jX4DQZdG12d5ZnfzlYsLh0uSfBj2Ih+gs4fngkbDXsYFKNGVdHYZHHJX1xfkGaLUt57yV/M9VqHj8DeTsMUa0bDORsEZDzxvHD3FgoDqB1nz+2Cx6S54Bqe9tdihPn1CElq+7EOQvWNjHbw9lpqFJElbsD96RGhiTCDNanBChvI3D+95hJ9XM9EFUm+DlZMfXgEUCo4pqnTpmTaL7f1qTPHUkWWSKTsX/KI4KRnKa8cYU92nYPhIwZDLywsY3s670wpUgElo1ERI9JjEofixyirsqwzxUza4n1aMpRdw=="
    }
  },
  "variables": {
    "azureApi": {
      "network": "2017-06-01",
      "vm": "2017-03-30",
      "storageacc": "2016-01-01"
    },
    "jc": "[parameters('jumpcount')]",
    "nicc": "[mul(variables('jc'), parameters('ifacecount'))]",
    "sc": "[parameters('storagecount')]",
    "ids": {
        "rg-network": "/subscriptions/4f2a8a58-fafe-4f8a-9a7c-bc7fb9da01ac/resourceGroups/rg-network/providers/Microsoft.Network/virtualNetworks/vnet-zone2-pmp"
    },
    "tiersarray": [
        "test",
        "qa",
        "prod"
    ],
    "vm": {
        "size": "[parameters('VmSize')]",
        "user": "[parameters('jumpboxSshUser')]",
        "key": "[parameters('jumpboxSshKey')]",
        "image": {
            "publisher": "Canonical",
            "offer": "UbuntuServer",
            "sku": "16.04-LTS",
            "version": "latest"
        },
        "disk": {
            "name": "os_disk",
            "type": "Standard_LRS"
        }
    }
  },
  "resources": [
    {
        "apiVersion": "[variables('azureApi').storageacc]",
        "type": "Microsoft.Storage/storageAccounts",
        "name": "[concat('storage', copyIndex('storagecopy'),uniqueString(resourceGroup().id))]",
        "location": "[resourceGroup().location]",
        "sku": {
            "name": "Premium_LRS"
        },
        "kind": "Storage",
        "properties": {},
        "copy": {
            "name": "storagecopy",
            "count": "[variables('sc')]"
        }
    },
    {
        "type": "Microsoft.Network/networkInterfaces",
        "apiVersion": "[variables('azureApi').network]",
        "name": "[concat('vm', copyIndex('niccopy'),'nic', copyIndex('niccopy'), uniqueString(resourceGroup().id))]",
        "location": "[resourceGroup().location]",
        "properties": {
          "ipConfigurations": [
            {
              "name": "[concat('ipconfig', copyIndex('niccopy'))]",
              "properties": {
                "subnet": {                    
                 "id": "[concat(resourceId('rg-network','Microsoft.Network/virtualNetworks', 'vnet-zone2-pmp'), '/subnets/', 'subnet-zone2-pmp')]"
                },
                "privateIPAllocationMethod": "Static",
                "privateIPAddress": "[parameters('ip-pool')[copyIndex('niccopy')]]"
              }
            }
          ]
        },
        "copy": {
            "name": "niccopy",
            "count": "[variables('nicc')]",
            "mode": "Serial",
            "batchSize": 1
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachines",
        "apiVersion": "[variables('azureApi').vm]",
        "name": "[concat('jump', copyIndex('vmcopy'), 'vm', uniqueString(resourceGroup().id))]",
        "location": "[resourceGroup().location]",
        "dependsOn": [
            "[concat('Microsoft.Network/networkInterfaces/', concat('vm', copyIndex('vmcopy'), 'nic', copyIndex('vmcopy'), uniqueString(resourceGroup().id)))]"
        ],
        "properties": {
            "hardwareProfile": {
                "vmSize": "[variables('vm').size]"
            },
            "osProfile": {
                "computerName": "[concat('jump', copyIndex('vmcopy'), uniqueString(resourceGroup().id))]",
                "adminUsername": "[variables('vm').user]",
                "linuxConfiguration": {
                    "disablePasswordAuthentication": true,
                    "ssh": {
                        "publicKeys": [
                            {
                                "path": "[concat('/home/', variables('vm').user, '/.ssh/authorized_keys')]",
                                "keyData": "[variables('vm').key]"
                            }
                        ]
                    }
                }
            },
            "storageProfile": {
                "imageReference": {
                    "publisher": "[variables('vm').image.publisher]",
                    "offer": "[variables('vm').image.offer]",
                    "sku": "[variables('vm').image.sku]",
                    "version": "[variables('vm').image.version]"
                },
                "osDisk": {
                    "name": "[concat(variables('vm').disk.name, copyIndex('vmcopy'))]",
                    "managedDisk": {
                        "storageAccountType": "[variables('vm').disk.type]"
                    },
                    "createOption": "FromImage"
                }
            },
            "networkProfile": {
                "networkInterfaces": [
                    {
                        "id": "[resourceId('Microsoft.Network/networkInterfaces/', concat('vm', copyIndex('vmcopy'), 'nic', copyIndex('vmcopy'), uniqueString(resourceGroup().id)) )]",
                        "properties": {
                            "primary": false
                        }
                    }
                ]
            }
        },
        "copy": {
            "name": "vmcopy",
            "count": "[variables('jc')]"
        }
    }
  ],
  "outputs": {
      "checkAddresses": {
          "type": "bool",
          "value": "[greaterOrEquals(length(parameters('ip-pool')), variables('nicc'))]"
      }
  }
}